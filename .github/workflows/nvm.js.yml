# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: nvm CI

on:
  push:
    branches: [ github-actions-tests ]
  pull_request:
    branches: [ github-actions-tests ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [0.10.0, 5, 8, 9, 10, 11, 12, 14, 16]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - run: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
    - run: |
        export NVM_DIR="$HOME/.nvm" 
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
        nvm install $NODE_VERSION && nvm use $NODE_VERSION
        echo '::set-output name=NVM_DIR::'$NVM_DIR
        node -v
        npm -v
        NODE_V=`node -v`
        NODE_MAJOR_VERSION=`echo "$NODE_V" | sed 's/v//g' | sed 's/\..*//g'`
        echo "Node major version: $NODE_MAJOR_VERSION"
        if [[ "$NODE_MAJOR_VERSION" -lt 6 ]]; then
            echo "Update npm to latest known version for node versions less than 6"
            nvm install-latest-npm
            if [[ "$NODE_MAJOR_VERSION" -eq 0 ]]; then
                nvm install-latest-npm
            fi
            node -v
            npm -v
        fi
        npm install
        npm run testonly
      id: nvm-setup
      env:
        NODE_VERSION: ${{ matrix.node-version }}
